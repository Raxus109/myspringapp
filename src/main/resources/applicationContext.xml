<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns="http://www.springframework.org/schema/beans"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd">

    <!--Создаем Bean-ы - они создают объекты из классов - фишка спринга
    PARAMS:
    id - имя бина
    class - класс, объект которого создается
    ref - имя бина, объект которого нужен для создания текущего объекта
    constructor-arg - Тег для создания объекта класса через конструктор (имя бина, в объект которого внедряем конструктор)
    property - Тег для создания объекта класса через сеттер (внедрение значения + имя бина, в объект которого внедряем значение)
    name-value передаем ключ(имя переменной) и значение
    context:property-placeholder - файл с пропертями, где location - это путь к файлу
    <ref bean - ссылка на бин, объект класса которого передается в элемент массива, если на вход нужно подать массив
    context:component-scan - сам сканирует классы, помеченные аннотацией @Component, чтобы не заморачиваться с ручным созданием бинов-->

    <context:property-placeholder location="classpath:musicPlayer.properties"/>
    <context:component-scan base-package="ru.raxus"/>


</beans>